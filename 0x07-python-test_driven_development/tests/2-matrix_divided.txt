The "2-matrix_divided.py" module
================================

Testing "matrix_divided" function
---------------------------------

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided


checking normal condition:
    >>> matrix = [
    ...      [1, 2, 3],
    ...      [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


checking one missing argument:
    >>> matrix = [
    ...      [1, 2, 3],
    ...      [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'


checking 2 missing arguments:
    print(matrix_divided())
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

checking TypeError of list:
    >>> matrix = "fsaf"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


checking TypeError of rows:
    >>> matrix = [
    ...      "asd",
    ...      [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

checking TypeError in rows:
    >>> matrix = [
    ...      [1, "aaa", 3],
    ...      [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


checking list doesn't have rows of the same size:
    >>> matrix = [
    ...      [1, 2, 3, 7],
    ...      [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size


checking div TypeError:
    >>> matrix = [
    ...      [1, 2, 3],
    ...      [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "asd"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number


checking division by zero:
    >>> matrix = [
    ...      [1, 2, 3],
    ...      [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero


checking div overflow:
    >>> matrix = [
    ...      [1, 2, 3],
    ...      [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, float("inf")))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]


checking div by NaN:
    >>> matrix = [
    ...      [1, 2, 3],
    ...      [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, float("NaN")))
    [[nan, nan, nan], [nan, nan, nan]]
