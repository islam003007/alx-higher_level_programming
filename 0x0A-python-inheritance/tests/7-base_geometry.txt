The "7-base_geometry.py" module
================================

Testing "BaseGeometry" class
-----------------------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry



testing "area()" method
-----------------------------

testing normal condition:
    >>> bg = BaseGeometry()
    >>> try:
    ...     bg.area()
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [Exception] area() is not implemented



testing "integer_validator" method
-----------------------------

testing normal condition:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 5)
    
testing no argmuents:
    >>> bg = BaseGeometry()
    >>> try:
    ...     bg.integer_validator()
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [TypeError] BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

testing one arguement:
    >>> bg = BaseGeometry()
    >>> try:
    ...     bg.integer_validator("name")
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [TypeError] BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

testing typeError:
    >>> bg = BaseGeometry()
    >>> try:
    ...     bg.integer_validator("name", "John")
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [TypeError] name must be an integer

testing valueError:
    >>> bg = BaseGeometry()
    >>> try:
    ...     bg.integer_validator("name", -5)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [ValueError] name must be greater than 0

